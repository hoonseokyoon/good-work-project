-- Core tables backing Good Work content.
create table if not exists public.institutions (
  id bigint generated by default as identity primary key,
  name text not null,
  slug text not null,
  description text,
  type text,
  "order" integer,
  lat double precision,
  lng double precision,
  address text,
  phone text,
  email text,
  website_url text,
  donation jsonb not null default '{}'::jsonb,
  created_at timestamptz not null default timezone('utc', now()),
  updated_at timestamptz not null default timezone('utc', now()),
  constraint institutions_slug_length check (char_length(slug) >= 1),
  constraint institutions_donation_object check (jsonb_typeof(donation) = 'object')
);

create table if not exists public.products (
  id bigint generated by default as identity primary key,
  institution_id bigint references public.institutions(id) on delete cascade,
  name text not null,
  category text,
  unit text,
  price numeric(12, 2),
  image_url text,
  buy_url text,
  created_at timestamptz not null default timezone('utc', now()),
  updated_at timestamptz not null default timezone('utc', now()),
  constraint products_price_positive check (price is null or price >= 0)
);

create table if not exists public.events (
  id bigint generated by default as identity primary key,
  institution_id bigint references public.institutions(id) on delete cascade,
  title text not null,
  description text,
  start_at timestamptz not null,
  end_at timestamptz,
  signup_url text,
  created_at timestamptz not null default timezone('utc', now()),
  updated_at timestamptz not null default timezone('utc', now()),
  constraint events_time_order check (end_at is null or end_at >= start_at)
);

create table if not exists public.news (
  id bigint generated by default as identity primary key,
  title text not null,
  image_url text,
  published_at timestamptz not null default timezone('utc', now()),
  source_name text,
  source_url text not null,
  tags text[] not null default '{}'::text[],
  institution_id bigint references public.institutions(id) on delete set null,
  summary text,
  created_at timestamptz not null default timezone('utc', now()),
  updated_at timestamptz not null default timezone('utc', now())
);

-- Keep updated_at in sync automatically.
create trigger set_public_institutions_updated_at
  before update on public.institutions
  for each row
  execute function public.set_updated_at();

create trigger set_public_products_updated_at
  before update on public.products
  for each row
  execute function public.set_updated_at();

create trigger set_public_events_updated_at
  before update on public.events
  for each row
  execute function public.set_updated_at();

create trigger set_public_news_updated_at
  before update on public.news
  for each row
  execute function public.set_updated_at();
